{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Administrator Username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator Password. The supplied password must be between 8-123 characters long and must satisfy at least 3 of password complexity requirements from the following: contains an uppercase character, contains a lowercase character, contains a numeric digit or contains a special character."
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created. The domain name must contain a dot '.' like 'example.local'."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique gateway public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.<location>.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'."
      }
    },
    "Frontend-Backend-VmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2"
      ],
      "metadata": {
        "description": "The size of the Frontend and Backend VMs"
      },
      "defaultValue": "Standard_D2_v2"
    },
    "numberOfSessionHostVMs(GPU)": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of Remote Desktop Session Host VMs"
      }
    },
    "RDSH-VmSize (GPU)": {
      "type": "string",
      "allowedValues": [
        "Standard_NV6",
        "Standard_NV12"
      ],
      "metadata": {
        "description": "The size of the SessionHost VMs"
      },
      "defaultValue": "Standard_NV6"
    },
    "numberOfSessionHostVMs(CPU)": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of Remote Desktop Session Host VMs"
      }
    },
    "RDSH-VmSize (CPU)": {
      "type": "string",
      "allowedValues": [
        "Standard_D1_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2"
      ],
      "metadata": {
        "description": "The size of the SessionHost VMs"
      },
      "defaultValue": "Standard_D12_v2"
    }
  },
  "variables": {
    "resourcesPrefix": "[uniquestring(resourceGroup().id)]",
    "mainStorageAccount": {
      "Name": "[concat(variables('resourcesPrefix'), 'msa')]",
      "Type": "Standard_LRS"
    },
    "vNet": {
      "Name": "RDS-VNET",
      "Prefix": "10.2.0.0/18"
    },
    "Subnets": [
      {
        "name": "frontend",
        "properties": {
          "addressPrefix": "10.2.2.0/24",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgFrontendName'))]"
          }
        }
      },
      {
        "name": "backend",
        "properties": {
          "addressPrefix": "10.2.4.0/24",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgBackendName'))]"
          }
        }
      },
      {
        "name": "sessionhost",
        "properties": {
          "addressPrefix": "10.2.6.0/24",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgSessionHostsName'))]"
          }
        }
      }
    ],
    "Template.Uri": "https://raw.githubusercontent.com/intelequia/VirtualLabs/master/high-availability-architecture/Templates/",
    "DCTemplate.Uri": "[concat(variables('Template.Uri'), 'rds-ad-azuredeploy.json')]",
    "FETemplate.Uri": "[concat(variables('Template.Uri'), 'rds-fe-azuredeploy.json')]",
    "BETemplate.Uri": "[concat(variables('Template.Uri'), 'rds-be-azuredeploy.json')]",
    "CPUSHTemplate.Uri": "[concat(variables('Template.Uri'), 'rds-sh-cpu-azuredeploy.json')]",
    "GPUSHTemplate.Uri": "[concat(variables('Template.Uri'), 'rds-sh-gpu-azuredeploy.json')]",
    "Configuration.Uri": "https://raw.githubusercontent.com/intelequia/VirtualLabs/master/high-availability-architecture/Configuration/",
    "Script.Uri": "https://raw.githubusercontent.com/intelequia/VirtualLabs/master/high-availability-architecture/Scripts/",
    "DCSubdeploymentName": "DCSubdeployment",
    "FESubdeploymentName": "FESubdeployment",
    "BESubdeploymentName": "BESubdeployment",
    "CPUSHSubdeploymentName": "CPUSHSubdeployment",
    "GPUSHSubdeploymentName": "GPUSHSubdeployment",
    "nsgSessionHostsName": "sessionhosts-nsg",
    "nsgBackendName": "backend-nsg",
    "nsgFrontendName": "frontend-nsg",
    "backendLoadBalancer": "RDBE-LB",
    "backendLoadBalancerIP": "10.2.4.10",
    "sqlserverName": "[concat(variables('resourcesPrefix'),split(parameters('domainName'),'.')[0], 'rds')]",
    "databaseName": "RDSBROKER",
    "sqlClientUrl": "https://download.microsoft.com/download/D/5/E/D5EEF288-A277-45C8-855B-8E2CB7E25B96/x64/msodbcsql.msi",
    "p": {
      "broker": "[concat(' -existingBroker ', concat('RDBE-VM01','.',parameters('domainName')))]",
      "domain": "[concat(' -domainName ', parameters('domainName'))]",
      "user": "[concat(' -username ', parameters('adminUsername'))]",
      "pwd": "[concat(' -password ', parameters('adminPassword'))]",
      "can": "[concat(' -clientAccessName ', variables('backendLoadBalancer'))]",
      "sqlnclient": "[concat(' -sqlClientUrl \"', variables('sqlClientUrl'), '\"')]",
      "dnsserver": "[concat(' -dnsServer ', 'RDDC-VM01')]",
      "sqlserver": "[concat(' -sqlServer \"','', '\"')]"
    },
    "impersonateScript": "https://gallery.technet.microsoft.com/scriptcenter/Impersonate-a-User-9bfeff82/file/127189/1/New-ImpersonateUser.ps1"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('mainStorageAccount').Name]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[variables('mainStorageAccount').Type]"
      },
      "kind": "Storage"
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNet').Name]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet').Prefix]"
          ]
        },
        "subnets": "[variables('Subnets')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgFrontendName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgBackendName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgSessionHostsName'))]"
      ]
    },
    {
      "apiVersion": "2016-09-01",
      "name": "[variables('DCSubdeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('DCTemplate.Uri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('mainStorageAccount').Name]"
          },
          "vnetName": {
            "value": "[variables('vNet').Name]"
          },
          "subnetName": {
            "value": "[variables('Subnets')[0].name]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "backendLoadBalancer": {
            "value": "[variables('backendLoadBalancer')]"
          },
          "backendLoadBalancerIP": {
            "value": "[variables('backendLoadBalancerIP')]"
          },
          "Configuration.Uri": {
            "value": "[variables('Configuration.Uri')]"
          },
          "Template.Uri": {
            "value": "[variables('Template.Uri')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('mainStorageAccount').Name)]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet').Name)]"
      ]
    },
    {
      "apiVersion": "2016-09-01",
      "name": "[variables('FESubdeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('FETemplate.Uri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('mainStorageAccount').Name]"
          },
          "vnetName": {
            "value": "[variables('vNet').Name]"
          },
          "subnetName": {
            "value": "[variables('Subnets')[0].name]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "publicDNS": {
            "value": "[parameters('dnsLabelPrefix')]"
          },
          "VmSize": {
            "value": "[parameters('Frontend-Backend-VmSize')]"
          },
          "Configuration.Uri": {
            "value": "[variables('Configuration.Uri')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('mainStorageAccount').Name)]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet').Name)]",
        "[resourceId('Microsoft.Resources/deployments', 'DCSubDeployment' )]"
      ]
    },
    {
      "apiVersion": "2016-09-01",
      "name": "[variables('BESubdeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('BETemplate.Uri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('mainStorageAccount').Name]"
          },
          "vnetName": {
            "value": "[variables('vNet').Name]"
          },
          "subnetName": {
            "value": "[variables('Subnets')[1].name]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "VmSize": {
            "value": "[parameters('Frontend-Backend-VmSize')]"
          },
          "Configuration.Uri": {
            "value": "[variables('Configuration.Uri')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('mainStorageAccount').Name)]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet').Name)]",
        "[resourceId('Microsoft.Resources/deployments', 'DCSubDeployment' )]"
      ]
    },
    {
      "apiVersion": "2016-09-01",
      "name": "[variables('CPUSHSubdeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "condition": "[greater(parameters('numberOfSessionHostVMs(CPU)'),0)]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('CPUSHTemplate.Uri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('mainStorageAccount').Name]"
          },
          "vnetName": {
            "value": "[variables('vNet').Name]"
          },
          "subnetName": {
            "value": "[variables('Subnets')[2].name]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "NumberOfVMs": {
            "value": "[parameters('numberOfSessionHostVMs(CPU)')]"
          },
          "VmSize": {
            "value": "[parameters('RDSH-VmSize (CPU)')]"
          },
          "Configuration.Uri": {
            "value": "[variables('Configuration.Uri')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('mainStorageAccount').Name)]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet').Name)]",
        "[resourceId('Microsoft.Resources/deployments', 'DCSubDeployment' )]"
      ]
    },
    {
      "apiVersion": "2016-09-01",
      "name": "[variables('GPUSHSubdeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "condition": "[greater(parameters('numberOfSessionHostVMs(GPU)'),0)]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('GPUSHTemplate.Uri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('mainStorageAccount').Name]"
          },
          "vnetName": {
            "value": "[variables('vNet').Name]"
          },
          "subnetName": {
            "value": "[variables('Subnets')[2].name]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "NumberOfVMs": {
            "value": "[parameters('numberOfSessionHostVMs(GPU)')]"
          },
          "VmSize": {
            "value": "[parameters('RDSH-VmSize (GPU)')]"
          },
          "Configuration.Uri": {
            "value": "[variables('Configuration.Uri')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('mainStorageAccount').Name)]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet').Name)]",
        "[resourceId('Microsoft.Resources/deployments', 'DCSubDeployment' )]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgSessionHostsName')]",
      "apiVersion": "2017-03-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "Inbound-RPC-RDHOST",
            "properties": {
              "description": "Allow RPC-RDHOST",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "445",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 140,
              "direction": "Inbound"
            }
          },
          {
            "name": "Inbound-RDP",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Inbound-AD-389",
            "properties": {
              "description": "Allow AD-389",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "Inbound-AD-636",
            "properties": {
              "description": "Allow AD-636",
              "protocol": "Udp",
              "sourcePortRange": "*",
              "destinationPortRange": "636",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "Inbound-WMI",
            "properties": {
              "description": "Allow WMI",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "5985",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 130,
              "direction": "Inbound"
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgBackendName')]",
      "apiVersion": "2017-03-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "Inbound-RDP",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Inbound-HTTPS",
            "properties": {
              "description": "Allow HTTPS",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "Inbound-RDWEB",
            "properties": {
              "description": "Allow RDWEB",
              "protocol": "Udp",
              "sourcePortRange": "*",
              "destinationPortRange": "5504",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "Inbound-RPC-RDHOST",
            "properties": {
              "description": "Allow RPC-RDHOST",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "445",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 130,
              "direction": "Inbound"
            }
          },
          {
            "name": "Inbound-WMI",
            "properties": {
              "description": "Allow WMI",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "5985",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 140,
              "direction": "Inbound"
            }
          },
          {
            "name": "Inbound-RPC-RDSH",
            "properties": {
              "description": "Allow RPC-RDSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "135",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 150,
              "direction": "Inbound"
            }
          },
          {
            "name": "Inbound-SMB",
            "properties": {
              "description": "Allow SMB",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "445",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 160,
              "direction": "Inbound"
            }
          },
          {
            "name": "Inbound-NetBIOS",
            "properties": {
              "description": "Allow NetBIOS",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "139",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 170,
              "direction": "Inbound"
            }
          },
          {
            "name": "Outbound-RDWeb",
            "properties": {
              "description": "Allow NetBIOS",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "5504",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound"
            }
          },
          {
            "name": "Outbound-RDP",
            "properties": {
              "description": "Allow RDP",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Outbound"
            }
          },
          {
            "name": "Outbound-RPC-RDHOST",
            "properties": {
              "description": "Allow RPC-RDHOST",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "445",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Outbound"
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgFrontendName')]",
      "apiVersion": "2017-03-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "Inbound-RDP",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Inbound-HTTPS",
            "properties": {
              "description": "Allow HTTPS",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "Inbound-RDP-UDP",
            "properties": {
              "description": "Allow RDP/UDP",
              "protocol": "Udp",
              "sourcePortRange": "*",
              "destinationPortRange": "3391",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "Inbound-WMI",
            "properties": {
              "description": "Allow WMI",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "5985",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 130,
              "direction": "Inbound"
            }
          },
          {
            "name": "Outbound-Kerberos",
            "properties": {
              "description": "Allow Kerberos",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "88",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Outbound"
            }
          },
          {
            "name": "Outbound-RPC",
            "properties": {
              "description": "Allow RPC",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "135",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Outbound"
            }
          },
          {
            "name": "Outbound-LDAP",
            "properties": {
              "description": "Allow LDAP",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 130,
              "direction": "Outbound"
            }
          },
          {
            "name": "Outbound-DNS",
            "properties": {
              "description": "Allow DNS",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "53",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 140,
              "direction": "Outbound"
            }
          },
          {
            "name": "Outbound-NPS",
            "properties": {
              "description": "Allow NPS",
              "protocol": "Udp",
              "sourcePortRange": "*",
              "destinationPortRange": "1812-1813",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 150,
              "direction": "Outbound"
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "RDBE-VM01/InitializeRDS",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'FESubdeployment' )]",
        "[resourceId('Microsoft.Resources/deployments', 'BESubdeployment' )]",
        "[resourceId('Microsoft.Resources/deployments', 'GPUSHSubdeployment' )]",
        "[resourceId('Microsoft.Resources/deployments', 'CPUSHSubdeployment' )]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.11",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[concat(variables('Configuration.Uri'),'ConfigurationBE.zip')]",
          "ConfigurationFunction": "ConfigurationBE.ps1\\RDSDeploy",
          "Properties": {
            "adminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "PrivateSettingsRef:adminPassword"
            },
            "connectionBroker": "[concat('RDBE-VM01.',parameters('domainName'))]",
            "domainName": "[parameters('domainName')]",
            "externalfqdn": "[reference(variables('FESubdeploymentName')).outputs.publicFQDN.value]",
            "numberOfSessionHostVMsCPU": "[parameters('numberOfSessionHostVMs(CPU)')]",
            "SHCPUNamingPrefix": "RDSH-CPU-VM",
            "numberOfSessionHostVMsGPU": "[parameters('numberOfSessionHostVMs(GPU)')]",
            "SHGPUNamingPrefix": "RDSH-GPU-VM",
            "webAccessServer": "[concat('RDFE-VM01.',parameters('domainName'))]"
          }
        },
        "protectedSettings": {
          "Items": {
            "adminPassword": "[parameters('adminPassword')]"
          }
        }
      }
    },
    {
      "name": "[variables('sqlserverName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "SqlServer"
      },
      "apiVersion": "2014-04-01-preview",
      "properties": {
        "administratorLogin": "[parameters('adminUsername')]",
        "administratorLoginPassword": "[parameters('adminPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "[variables('databaseName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "Database"
          },
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[variables('sqlserverName')]"
          ],
          "properties": {
            "edition": "Basic",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "1073741824",
            "requestedServiceObjectiveName": "Basic"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01",
          "dependsOn": [
            "[variables('sqlserverName')]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "name": "RDFE-VM02/ConfigureFE-HA",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/RDBE-VM01/extensions/','InitializeRDS')]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(variables('Script.Uri'), 'ConfigureFE-HA.ps1')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[Concat('powershell.exe -ExecutionPolicy Unrestricted -file ', 'ConfigureFE-HA.ps1',' ','-username \"',parameters('adminusername'),'\" ', '-password \"',parameters('adminpassword'),'\" ','-BrokerServer \"',concat('RDBE-VM01.',parameters('domainName')),'\" ','-WebURL \"',reference(variables('FESubdeploymentName')).outputs.publicFQDN.value,'\" ','-Domainname \"',parameters('domainName'),'\" ','-DomainNetbios \"',split(parameters('domainName'),'.')[0],'\" ','-numberofwebServers ',2)]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "RDBE-VM02/ConfigureBE-HA",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/RDBE-VM01/extensions/','InitializeRDS')]",
        "[concat('Microsoft.Sql/servers/',variables('sqlserverName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('impersonateScript')]",
            "[concat(variables('Script.Uri'), 'ConfigureBE-HA.ps1')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat( 'powershell -noninteractive -executionpolicy bypass -file ', 'ConfigureBE-HA.ps1', variables('p').broker,' -primaryDbConnectionString  \"',concat('Driver={ODBC Driver 13 for SQL Server};Server=tcp:', reference(variables('sqlserverName')).fullyQualifiedDomainName, ',1433;Database=', variables('databaseName'), ';Uid=', parameters('adminUsername'), '@', variables('sqlserverName'), ';Pwd=', parameters('adminPassword'),';Encrypt=yes;TrustServerCertificate=no;Connection Timeout=30;'),'\"', variables('p').domain, variables('p').user, variables('p').pwd, variables('p').can, variables('p').sqlnclient, variables('p').dnsserver, variables('p').sqlserver, ' >> script.log 2>&1' )]"
        }
      }
    }
  ],
  "outputs": {}
}
